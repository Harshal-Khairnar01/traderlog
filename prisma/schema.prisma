generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  name           String?
  email          String           @unique
  password       String
  initialCapital Float            @default(0)
  trades         Trade[]
  capitalLogs    CapitalChange[]
  createdAt      DateTime         @default(now())
}

model Trade {
  id                     Int        @id @default(autoincrement())
  userId                 Int
  marketType             String     // e.g., "Indian"
  symbol                 String     // e.g., RELIANCE, NIFTY 50
  date                   DateTime
  time                   String?    // Stored as "HH:mm" format
  entryPrice             Float
  exitPrice              Float
  quantity               Int
  totalAmount            Float
  stopLoss               Float
  target                 Float
  tradeType              String     // e.g., "Call", "Put"
  direction              String     // "Long" or "Short"
  grossPnl               Float
  netPnl                 Float
  pnlPercentage          Float
  riskReward             Float
  charges                Float?
  strategyUsed           String?
  outcomeSummary         String?
  tradeAnalysis          String?
  tags                   String[]   @default([])

  // Optional Psychology Entry
  psychology             Psychology?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Psychology {
  id               Int        @id @default(autoincrement())
  tradeId          Int        @unique
  confidenceLevel  Int        // 1-10
  emotionsBefore   String?
  emotionsAfter    String?
  notes            String?    // Trade notes / journal
  mistakes         String?    // What went wrong
  mistakeChecklist String[]   @default([])
  whatIDidWell     String?    // Positive actions
  tags             String[]   @default([])
  screenshotUrl    String?

  trade Trade @relation(fields: [tradeId], references: [id], onDelete: Cascade)
}

model CapitalChange {
  id     Int      @id @default(autoincrement())
  userId Int
  amount Float
  reason String?
  date   DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
